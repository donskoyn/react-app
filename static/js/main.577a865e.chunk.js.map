{"version":3,"sources":["modules/list/components/ShowLists/index.tsx","modules/list/components/NewListForm/index.tsx","modules/common/utils/sortTasks.ts","App.tsx","modules/list/pages/List/index.tsx","index.tsx"],"names":["ShowList","props","state","statusValues","disabled","selected","data","List","onClick","bind","onUpdate","e","this","onRemove","elem","status","target","value","setState","Onupdate","className","name","onChange","src","React","Component","ListForm","onNameChange","onSubmit","preventDefault","ListName","trim","onListSubmit","type","placeholder","sortTask","sort","prev","next","id","AllList","onAddList","list","FormData","append","xhr","XMLHttpRequest","open","apiUrl","onload","loadData","send","onRemoveList","url","setRequestHeader","onUpdateList","AllTasks","remove","update","map","key","filter","item","toLowerCase","indexOf","textSearch","search","ChangeStatus","Lists","JSON","parse","responseText","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.577a865e.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"./style.css\"\r\n\r\nclass ShowList extends React.Component {\r\n    public props :any;\r\n    public state :any;\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = { data: props.List };\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onUpdate=this.onUpdate.bind(this)\r\n    }\r\n    statusValues=()=>{\r\n        return(\r\n            <select>\r\n                <option disabled selected>Change status</option>\r\n                <option>Active</option>\r\n                <option>Important</option>\r\n                <option>Done</option>\r\n            </select>\r\n        )\r\n    };\r\n    onClick(e:any) {\r\n        this.props.onRemove(this.state.data);\r\n    }\r\n\r\n    onUpdate(e:any){\r\n\r\n        const elem=this.state.data;\r\n        elem.status=e.target.value;\r\n        this.setState({\r\n            data:elem\r\n        });\r\n        this.props.Onupdate(this.state.data)\r\n\r\n\r\n    }\r\n    render() {\r\n        return <div className={`List ${this.state.data.status}`}>\r\n            <div className=\"list\"><b>{this.state.data.name}</b></div>\r\n            <div className=\"list-Status\"><div>Status list-{this.state.data.status}</div>\r\n            <div  onChange={this.onUpdate}>{this.statusValues()}</div>\r\n            <div><button className=\"btn\" onClick={this.onClick}><img src=\"https://img.icons8.com/ios/20/000000/empty-trash.png\"/></button></div></div>\r\n        </div>;\r\n    }\r\n}\r\nexport default ShowList;","import React from \"react\"\r\nimport \"./style.css\"\r\n\r\nclass ListForm extends React.Component {\r\n        public state:any;\r\n        public props:any;\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = { name: \"\" };\r\n\r\n    }\r\n    onNameChange=(e:any)=> {\r\n        this.setState({ name: e.target.value });\r\n    };\r\n\r\n    onSubmit=(e:any) =>{\r\n        e.preventDefault();\r\n        const ListName = this.state.name.trim();\r\n        if (!ListName ) {\r\n            return;\r\n        }\r\n        this.props.onListSubmit({ name: ListName });\r\n        this.setState({ name: \"\"});\r\n    };\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <div className=\"formDiv\">\r\n                    <input className=\"inputText\" type=\"text\"\r\n                           placeholder=\"Write new task\"\r\n                           value={this.state.name}\r\n                           onChange={this.onNameChange} />\r\n                <input className=\"btn\" type=\"submit\" value=\"Save\" />\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nexport default ListForm\r\n","import {Task} from '../../list/types'\r\n\r\nexport const sortTask=(data:Task[])=>{\r\n        return data.sort((prev:Task,next:Task)=> prev.id-next.id)\r\n};","import  React from \"react\";\nimport AllList from './modules/list/pages/List'\nexport default AllList;\n\n","import React from \"react\";\r\nimport ShowList from \"../../components/ShowLists\"\r\nimport ListForm from '../../components/NewListForm'\r\nimport \"./style.css\"\r\nimport {sortTask} from '../../../common/utils/'\r\nimport {Task} from '../../types'\r\n\r\n\r\nclass AllList extends React.Component {\r\n\r\n    public  state:any;\r\n    public props:any;\r\n    constructor(props : any) {\r\n        super(props);\r\n        this.state = { Lists: [],status:'All',textSearch:'' };\r\n    }\r\n    // загрузка данных\r\n    loadData() {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"get\", this.props.apiUrl, true);\r\n\r\n        xhr.onload = ()=> {\r\n            const data = JSON.parse(xhr.responseText);\r\n            this.setState({ Lists: sortTask(data) });\r\n        };\r\n        xhr.send();\r\n    }\r\n    \r\n    \r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    // добавление объекта\r\n    onAddList=(list:Task)=> {\r\n        if (list) {\r\n\r\n            const data = new FormData();\r\n            data.append(\"name\", list.name);\r\n            data.append(\"status\", \"Active\");\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open(\"post\", this.props.apiUrl, true);\r\n            xhr.onload =  ()=> {\r\n                if (xhr.status === 200) {\r\n                    this.loadData();\r\n                }\r\n            };\r\n            xhr.send(data);\r\n        }\r\n    }\r\n    // удаление объекта\r\n    onRemoveList=(list:Task)=> {\r\n\r\n        if (list) {\r\n            const url = this.props.apiUrl + \"/\" + list.id;\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open(\"delete\", url, true);\r\n            xhr.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n            xhr.setRequestHeader(\"Access-Control-Allow-Methods\", \"GET, PUT, POST, DELETE\");\r\n            xhr.setRequestHeader(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept, Authorization\");\r\n            xhr.onload =  ()=> {\r\n                if (xhr.status === 200) {\r\n                    this.loadData();\r\n                }\r\n            };\r\n            xhr.send();\r\n        }\r\n    };\r\n    onUpdateList=(list:any)=> {\r\n        const data = new FormData();\r\n        data.append(\"id\",list.id);\r\n        data.append(\"name\",list.name);\r\n        data.append(\"status\",list.status);\r\n        var url = this.props.apiUrl+\"/\"+\"update\"  ;\r\n        var xhr = new XMLHttpRequest();\r\n\r\n        xhr.open(\"post\", url, true);\r\n        xhr.onload =  () =>{\r\n            if (xhr.status === 200) {\r\n                this.loadData();\r\n            }\r\n        };\r\n        xhr.send(data);\r\n\r\n    }\r\n\r\n\r\n    AllTasks = (data:Task[],remove:any,update:any,status:any) => {\r\n        switch (status) {\r\n            case \"All\":\r\n                return data.map(function (list:Task) {\r\n                    return <ShowList Onupdate={update} key={list.id} List={list} onRemove={remove} />\r\n                });\r\n            case \"Active\":\r\n                return data.filter((item:Task) => item.status==='Active').map(function (list:any) {\r\n                    return <ShowList Onupdate={update} key={list.id} List={list} onRemove={remove} />\r\n                });\r\n            case \"Important\":\r\n                return data.filter((item:Task) => item.status==='Important').map(function (list:any) {\r\n                    return <ShowList Onupdate={update} key={list.id} List={list} onRemove={remove} />\r\n                });\r\n            case \"Done\":\r\n                return data.filter((item:Task) => item.status==='Done').map(function (list:any) {\r\n                    return <ShowList Onupdate={update} key={list.id} List={list} onRemove={remove} />\r\n                });\r\n            case \"Search\":\r\n                return data.filter((item:Task) => item.name.toLowerCase().indexOf(this.state.textSearch.toLowerCase()) > -1).map(function (list:any) {\r\n                    return <ShowList Onupdate={update} key={list.id} List={list} onRemove={remove} />\r\n                });\r\n\r\n\r\n        }\r\n    };\r\n    ChangeStatus(status:string){\r\n             this.setState({status:status});\r\n\r\n\r\n    };\r\n    search=(e:any)=>{\r\n\r\n        this.setState({textSearch:e.target.value})\r\n        this.ChangeStatus(\"Search\")\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const remove = this.onRemoveList;\r\n        const update=this.onUpdateList;\r\n        const data=this.state.Lists;\r\n        const status=this.state.status;\r\n\r\n        return <div className=\"Main\">\r\n            <div className=\"status\">\r\n            <ListForm  onListSubmit={this.onAddList} />\r\n            <div onClick={()=>this.ChangeStatus(\"All\")}>All</div>\r\n            <div onClick={()=>this.ChangeStatus(\"Active\")}>Active</div>\r\n            <div onClick={()=>this.ChangeStatus(\"Important\")}>Important</div>\r\n            <div onClick={()=>this.ChangeStatus(\"Done\")}>Done</div>\r\n            </div>\r\n                <input className=\"searchPanel\" placeholder=\"Search you task\" type=\"text\" onChange={this.search}/>\r\n                    <h2>To Do List</h2>\r\n                    <div>{this.AllTasks(data,remove,update,status)}</div>\r\n            </div>;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default AllList;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AllList from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AllList apiUrl={'https://localhost:44366/api/data'}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}